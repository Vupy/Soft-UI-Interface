@use "sass:map";
@import '../effects/effects';

@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);
    
    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    
    @return $string;
}

@mixin create_sizer_format($class, $size, $type, $effect) {
    .#{$effect}#{$class}#{map.get($effects, $effect)} {
        #{$type}: $size;
    }
}

$styles: .25rem, .25em, .25px, .25vw, .25vh;

@mixin create_sizer_percentage($class, $type, $effect) {
    @include create_sizer_format(#{$class}__full, 100%, $type, $effect);

    @include create_sizer_format(#{$class}__1\/2, 100% / 2, $type, $effect);

    @include create_sizer_format(#{$class}__1\/3, 100% / 3, $type, $effect);
    @include create_sizer_format(#{$class}__2\/3, 100% / 3 * 2, $type, $effect);

    @include create_sizer_format(#{$class}__1\/4, 100% / 4, $type, $effect);
    @include create_sizer_format(#{$class}__3\/4, 100% / 4 * 3, $type, $effect);

    @include create_sizer_format(#{$class}__1\/5, 100% / 5, $type, $effect);
    @include create_sizer_format(#{$class}__2\/5, 100% / 5 * 2, $type, $effect);
    @include create_sizer_format(#{$class}__3\/5, 100% / 5 * 3, $type, $effect);
    @include create_sizer_format(#{$class}__4\/5, 100% / 5 * 4, $type, $effect);

    @include create_sizer_format(#{$class}__1\/6, 100% / 6, $type, $effect);
    @include create_sizer_format(#{$class}__5\/6, 100% / 6 * 5, $type, $effect);

    @include create_sizer_format(#{$class}__1\/7, 100% / 7, $type, $effect);
    @include create_sizer_format(#{$class}__2\/7, 100% / 7 * 2, $type, $effect);
    @include create_sizer_format(#{$class}__3\/7, 100% / 7 * 3, $type, $effect);
    @include create_sizer_format(#{$class}__4\/7, 100% / 7 * 4, $type, $effect);
    @include create_sizer_format(#{$class}__5\/7, 100% / 7 * 5, $type, $effect);
    @include create_sizer_format(#{$class}__6\/7, 100% / 7 * 6, $type, $effect);

    @include create_sizer_format(#{$class}__1\/8, 100% / 8, $type, $effect);
    @include create_sizer_format(#{$class}__3\/8, 100% / 8 * 3, $type, $effect);
    @include create_sizer_format(#{$class}__5\/8, 100% / 8 * 5, $type, $effect);
    @include create_sizer_format(#{$class}__7\/8, 100% / 8 * 7, $type, $effect);

    @include create_sizer_format(#{$class}__1\/9, 100% / 9, $type, $effect);
    @include create_sizer_format(#{$class}__2\/9, 100% / 9 * 2, $type, $effect);
    @include create_sizer_format(#{$class}__4\/9, 100% / 9 * 4, $type, $effect);
    @include create_sizer_format(#{$class}__5\/9, 100% / 9 * 5, $type, $effect);
    @include create_sizer_format(#{$class}__7\/9, 100% / 9 * 7, $type, $effect);
    @include create_sizer_format(#{$class}__8\/9, 100% / 9 * 8, $type, $effect);

    @include create_sizer_format(#{$class}__1\/10, 100% / 10, $type, $effect);
    @include create_sizer_format(#{$class}__3\/10, 100% / 10 * 3, $type, $effect);
    @include create_sizer_format(#{$class}__7\/10, 100% / 10 * 7, $type, $effect);
    @include create_sizer_format(#{$class}__9\/10, 100% / 10 * 9, $type, $effect);

    @include create_sizer_format(#{$class}__1\/12, 100% / 12, $type, $effect);
    @include create_sizer_format(#{$class}__5\/12, 100% / 12 * 5, $type, $effect);
    @include create_sizer_format(#{$class}__7\/12, 100% / 12 * 7, $type, $effect);
    @include create_sizer_format(#{$class}__11\/12, 100% / 12 * 11, $type, $effect);
}
    
@mixin create_sizer($class, $type, $effect) {
    @each $s in $styles {
        @include create_sizer_format(#{$class}__auto, auto, $type, $effect);

        $measure: #{str-replace("#{$s}", ".25", '')};
        $measure: #{str-replace("#{$s}", "0.25", '')};

        @if $measure == 'rem' {
            $measure: '';
        }

        @for $i from 0 to 4 {
            @include create_sizer_format(#{$class}__#{str-replace("#{$i * .25}#{$measure}", "0.", "\\.")}, $i * $s, $type, $effect);
        }

        @for $i from 1 to 17 {
            @include create_sizer_format(#{$class}__#{$i}#{$measure}, $i * $s * 4, $type, $effect);
        }

        @for $i from 1 to 17 {
            @include create_sizer_format(#{$class}__#{$i + 16}#{$measure}, $i * $s * 8 + ($s * 4 * 16), $type, $effect);
        }

        @if $measure == 'vw' or $measure == 'vh' {
            @for $i from 1 to 14 {
                @include create_sizer_format(#{$class}__#{$i + 32}#{$measure}, $i * $s * 16 + ($s * 4 * 48), $type, $effect);
            }
        } @else {
            @for $i from 1 to 17 {
                @include create_sizer_format(#{$class}__#{$i + 32}#{$measure}, $i * $s * 16 + ($s * 4 * 48), $type, $effect);
            }
        }
    }

    @include create_sizer_percentage($class, $type, $effect);
}

@each $i, $_ in $effects {
    @include create_sizer(w, width, $i);
    @include create_sizer(wmax, max-width, $i);
    @include create_sizer(wmin, min-width, $i);
    @include create_sizer(h, height, $i);
    @include create_sizer(hmax, max-height, $i);
    @include create_sizer(hmin, min-height, $i);
}